openapi: 3.0.3
info:
  title: Backend Service for UKRIDA Portal System
  description: |-
    Backend Service with Flask and MongoDB
  contact:
    email: dareen.422023008@ukrida.ac.id
  version: 1.0.11
servers:
  - url: "{protocol}://{serverip}:{port}/api/v1"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      serverip:
        default: 127.0.0.1
        description: server IP
      port:
        default: "5003"
        description: assigned port

tags:
  - name: User
    description: Endpoint for managing user
  - name: Courses
    description: Endpoint for managing courses
  - name: Bulletin
    description: Endpoint for managing bulletin
  - name: Billing
    description: Endpoint for managing billing
  - name: Academic
    description: Endpoint for managing academic
  - name: Softskill
    description: Endpoint for managing softskill

paths:
  /user:
    post:
      tags:
        - User
      summary: Register User
      description: |
        Create user endpoint
        ```
        curl --location --request POST '`${url}`/api/v1/user' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "username": "api_user",
                "password": "siwp2005"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  id:
                    type: string
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
  /login:
    post:
      tags:
        - User
      summary: Login Endpoint
      description: |
        login endpoint
        ```
        curl --location --request POST '`${url}`/api/v1/login' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "username": "api_user",
                "password": "siwp2005"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
  /courses:
    post:
      tags:
        - Courses
      summary: Add Course
      security:
        - BearerAuth: []
      description: |
        Create new course
        ```
        curl --location --request POST '`${url}`/api/v1/courses' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "kode_mk": "SIWP2005",
                "semester": "2",
                "nama_mk": "OOP",
                "sks": "6",
                "description": "OOP course"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePostRequestBody"

      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
    get:
      tags:
        - Courses
      summary: Get All Courses
      security:
        - BearerAuth: []
      description: |
        Get courses resource
        ```
        curl --location --request GET '`${url}`/api/v1/courses' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CourseObject"
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

  /courses/{course_id}:
    parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - Courses
      summary: Get course by course ID
      security:
        - BearerAuth: []
      description: |
        Get course resource
        ```
        curl --location --request GET '`${url}`/api/v1/courses/{course_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

    delete:
      tags:
        - Courses
      summary: Delete Course By ID
      security:
        - BearerAuth: []
      description: |
        Delete Courses resource by ID
        ```
        curl --location --request DELETE '`${url}`/api/v1/courses/{course_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: Course successfully deleted
          content:
            text/plain:
              schema:
                type: string
                example: Success

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
              example:
                message: Resource not exist
    put:
      tags:
        - Courses
      summary: "Edit Course"
      security:
        - BearerAuth: []
      description: |
        Edit the details of Course
        ```
        curl --location --request PUT '`${url}`/api/v1/courses/{course_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "kode_mk":"string",
                "nama_mk":"string" ,
                "semester": "string",
                "sks": 0,
                "description": "string"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CoursePostRequestBody"

      responses:
        "200":
          description: "Edit Courses Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
                    
# -------------------------------------------------------------------------
  /bulletin:
    post:
      tags:
        - Bulletin
      summary: Add Bulletin
      security:
        - BearerAuth: []
      description: |
        Create new bulletin
        ```
        curl --location --request POST '`${url}`/api/v1/bulletin' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Beasiswa Gratis!!!",
                "content": "Dapatkan beasiswa gratis"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulletinPostRequestBody"

      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
    get:
      tags:
        - Bulletin
      summary: Get All Bulletin
      security:
        - BearerAuth: []
      description: |
        Get bulletin resource
        ```
        curl --location --request GET '`${url}`/api/v1/bulletin' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/BulletinObject"
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

  /bulletin/{bulletin_id}:
    parameters:
      - name: bulletin_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - Bulletin
      summary: Get bulletin by bulletin ID
      security:
        - BearerAuth: []
      description: |
        Get bulletin resource
        ```
        curl --location --request GET '`${url}`/api/v1/bulletin/{bulletin_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

    delete:
      tags:
        - Bulletin
      summary: Delete Bulletin By ID
      security:
        - BearerAuth: []
      description: |
        Delete Bulletin resource by ID
        ```
        curl --location --request DELETE '`${url}`/api/v1/bulletin/{bulletin_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: Bulletin successfully deleted
          content:
            text/plain:
              schema:
                type: string
                example: Success

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
              example:
                message: Resource not exist
    put:
      tags:
        - Bulletin
      summary: "Edit Bulletin"
      security:
        - BearerAuth: []
      description: |
        Edit the details of Bulletin
        ```
        curl --location --request PUT '`${url}`/api/v1/bulletin/{bulletin_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name":"Beasiswa gratis",
                "content":"Beasiswa gratissssssssssssssss"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulletinPostRequestBody"

      responses:
        "200":
          description: "Edit Bulletin Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
#--------------------------------------------------------------------------

  /billing:
    post:
      tags:
        - Billing
      summary: Add Billing
      security:
        - BearerAuth: []
      description: |
        Create new billing
        ```
        curl --location --request POST '`${url}`/api/v1/billing' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "billing": "Rp 5.000.000,-",
                "semester": "3"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPostRequestBody"

      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
    get:
      tags:
        - Billing
      summary: Get All Billing
      security:
        - BearerAuth: []
      description: |
        Get billing resource
        ```
        curl --location --request GET '`${url}`/api/v1/billing' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/BillingObject"
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

  /billing/{billing_id}:
    parameters:
      - name: billing_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - Billing
      summary: Get billing by billing ID
      security:
        - BearerAuth: []
      description: |
        Get billing resource
        ```
        curl --location --request GET '`${url}`/api/v1/billing/{billing_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

    delete:
      tags:
        - Billing
      summary: Delete Billing By ID
      security:
        - BearerAuth: []
      description: |
        Delete Billing resource by ID
        ```
        curl --location --request DELETE '`${url}`/api/v1/billing/{billing_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: Billing successfully deleted
          content:
            text/plain:
              schema:
                type: string
                example: Success

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
              example:
                message: Resource not exist
    put:
      tags:
        - Billing
      summary: "Edit Billing"
      security:
        - BearerAuth: []
      description: |
        Edit the details of Billing
        ```
        curl --location --request PUT '`${url}`/api/v1/billing/{billing_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "billing": "Rp 5.000.000,-",
                "semester": "3"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPostRequestBody"

      responses:
        "200":
          description: "Edit Billing Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

#------------------------------------------------------------------------

  /academic:
    post:
      tags:
        - Academic
      summary: Add Academic
      security:
        - BearerAuth: []
      description: |
        Create new academic
        ```
        curl --location --request POST '`${url}`/api/v1/academic' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "course": "Pemrograman Web Lanjutan",
                "type": "UAS",
                "semester": "5",
                "grade": "96"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademicPostRequestBody"

      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademicObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
    get:
      tags:
        - Academic
      summary: Get All Academic
      security:
        - BearerAuth: []
      description: |
        Get academic resource
        ```
        curl --location --request GET '`${url}`/api/v1/academic' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AcademicObject"
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

  /academic/{academic_id}:
    parameters:
      - name: academic_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - Academic
      summary: Get academic by academic ID
      security:
        - BearerAuth: []
      description: |
        Get academic resource
        ```
        curl --location --request GET '`${url}`/api/v1/academic/{academic_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademicObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

    delete:
      tags:
        - Academic
      summary: Delete Academic By ID
      security:
        - BearerAuth: []
      description: |
        Delete Academic resource by ID
        ```
        curl --location --request DELETE '`${url}`/api/v1/academic/{academic_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: Academic successfully deleted
          content:
            text/plain:
              schema:
                type: string
                example: Success

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
              example:
                message: Resource not exist
    put:
      tags:
        - Academic
      summary: "Edit Academic"
      security:
        - BearerAuth: []
      description: |
        Edit the details of Academic
        ```
        curl --location --request PUT '`${url}`/api/v1/academic/{academic_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "course": "Pemrograman Web Lanjutan",
                "type": "UAS",
                "semester": "5",
                "grade": "96"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademicPostRequestBody"

      responses:
        "200":
          description: "Edit Academic Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademicObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

#--------------------------------------------------------------------

  /softskill:
    post:
      tags:
        - Softskill
      summary: Add Softskill
      security:
        - BearerAuth: []
      description: |
        Create new softskill
        ```
        curl --location --request POST '`${url}`/api/v1/softskill' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "title": "Seminar Mobel Lejen",
                "organizer": "UKRIDA",
                "year": "2024",
                "content": "Seminar gem mobel lejen di aula"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SoftskillPostRequestBody"

      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftskillObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"
    get:
      tags:
        - Softskill
      summary: Get All Softskill
      security:
        - BearerAuth: []
      description: |
        Get softskill resource
        ```
        curl --location --request GET '`${url}`/api/v1/softskill' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SoftskillObject"
        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

  /softskill/{softskill_id}:
    parameters:
      - name: softskill_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - Softskill
      summary: Get softskill by softskill ID
      security:
        - BearerAuth: []
      description: |
        Get softskill resource
        ```
        curl --location --request GET '`${url}`/api/v1/softskill/{softskill_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: "Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftskillObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

    delete:
      tags:
        - Softskill
      summary: Delete Softskill By ID
      security:
        - BearerAuth: []
      description: |
        Delete Softskill resource by ID
        ```
        curl --location --request DELETE '`${url}`/api/v1/softskill/{softskill_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
        ```
      responses:
        "200":
          description: Softskill successfully deleted
          content:
            text/plain:
              schema:
                type: string
                example: Success

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
              example:
                message: Resource not exist
    put:
      tags:
        - Softskill
      summary: "Edit Softskill"
      security:
        - BearerAuth: []
      description: |
        Edit the details of Softskill
        ```
        curl --location --request PUT '`${url}`/api/v1/softskill/{softskill_id}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer {TOKEN} \
            --data-raw '{
                "name": "Kevin Divra Bruyne",
                "nim": "422023099",
                "title": "Seminar Mobel Lejen",
                "organizer": "UKRIDA",
                "year": "2024",
                "content": "Seminar gem mobel lejen di aula"
            }'
        ```
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SoftskillPostRequestBody"

      responses:
        "200":
          description: "Edit Softskill Success response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftskillObject"

        "default":
          description: |
            ```
            400 - Bad Request
            401 - Unauthorized
            403 - Forbidden
            404 - Not Found
            422 - Unprocessable Entity
            500 - Error on server
            ```
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: "error description"
                    example: "Server Error"

#------------------------------------------------------------------
                    
components:
  schemas:
    CourseObject:
      type: object
      required:
        - kode_mk
        - nama_mk
        - semester
        - sks
      properties:
        id:
          description: course id
          type: string
        kode_mk:
          description: course code
          type: string
        nama_mk:
          description: course name
          type: string
        semester:
          description: course semester
          type: string
        sks:
          description: course sks
          type: number
        description:
          description: course description
          type: string

        user:
          description: user own the resource
          type: object
          properties:
            id:
              description: user ID
              type: string
            name:
              description: user name
              type: string

    CoursePostRequestBody:
      type: object
      required:
        - kode_mk
        - nama_mk
        - semester
        - sks
      properties:
        kode_mk:
          description: course code
          type: string
        nama_mk:
          description: course name
          type: string
        semester:
          description: course semester
          type: string
        sks:
          description: course sks
          type: number
        description:
          description: course description
          type: string
          
    BulletinObject:
      type: object
      required:
        - name
        - content
      properties:
        id:
          description: bulletin id
          type: string
        name:
          description: bulletin name
          type: string
        content:
          description: bulletin content
          type: string


    BulletinPostRequestBody:
      type: object
      required:
        - name
        - content
      properties:
        name:
          description: bulletin code
          type: string
        content:
          description: bulletin name
          type: string
          
    BillingObject:
      type: object
      required:
        - name
        - nim
        - billing
        - semester
      properties:
        id:
          description: billing id
          type: string
        name:
          description: billing name
          type: string
        nim:
          description: billing nim
          type: string
        billing:
          description: billing value
          type: string
        semester:
          description: billing semester
          type: string


    BillingPostRequestBody:
      type: object
      required:
        - name
        - nim
        - billing
        - semester
      properties:
        name:
          description: billing name
          type: string
        nim:
          description: billing nim
          type: string
        billing:
          description: billing value
          type: string
        semester:
          description: billing semester
          type: string
          
    AcademicObject:
      type: object
      required:
        - name
        - nim
        - course
        - type
        - semester
        - grade
      properties:
        id:
          description: academic id
          type: string
        name:
          description: academic name
          type: string
        nim:
          description: academic nim
          type: string
        course:
          description: academic course
          type: string
        type:
          description: academic type
          type: string
        semester:
          description: academic semester
          type: string
        grade:
          description: academic grade
          type: string


    AcademicPostRequestBody:
      type: object
      required:
        - name
        - nim
        - course
        - type
        - semester
        - grade
      properties:
        name:
          description: academic name
          type: string
        nim:
          description: academic nim
          type: string
        course:
          description: academic course
          type: string
        type:
          description: academic type
          type: string
        semester:
          description: academic semester
          type: string
        grade:
          description: academic grade
          type: string
          
    SoftskillObject:
      type: object
      required:
        - name
        - nim
        - title
        - organizer
        - year
        - content
      properties:
        id:
          description: softskill id
          type: string
        name:
          description: softskill name
          type: string
        nim:
          description: softskill nim
          type: string
        title:
          description: softskill title
          type: string
        organizer:
          description: softskill organizer
          type: string
        year:
          description: softskill year
          type: string
        content:
          description: softskill content
          type: string


    SoftskillPostRequestBody:
      type: object
      required:
        - name
        - nim
        - title
        - organizer
        - year
        - content
      properties:
        name:
          description: softskill name
          type: string
        nim:
          description: softskill nim
          type: string
        title:
          description: softskill title
          type: string
        organizer:
          description: softskill organizer
          type: string
        year:
          description: softskill year
          type: string
        content:
          description: softskill content
          type: string


  securitySchemes:
    BearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
